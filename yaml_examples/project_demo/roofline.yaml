run_configurations:
  "cpp-reference":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 1
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "../0_cpp_versions/0_ref"
    build_commands:
      - "make no_yaml"
      - "make -j 8"
    run_command: "./test_HPCCG"

  "rust-reference":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 1
      "exclusive": "mcs"
      "mem": 60000 # Rust seems to use more memory, this heavily bottlenecks if too small
    module_loads: []
    environment_variables: {}
    directory: "../5_iterators"
    build_commands:
      - "cargo build --release"
    run_command: "./target/release/hpccg-rs"

  "cpp-openmp":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 32
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "../0_cpp_versions/1_openmp"
    build_commands:
      - "make no_yaml"
      - "make -j 8"
    run_command: "./test_HPCCG"

  "rust-rayon":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 32
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "../6_parallel"
    build_commands:
      - "cargo build --release"
    run_command: "./target/release/hpccg-rs"

benches:
  "short-example":
    run_configurations:
      - "cpp-reference"
      - "cpp-openmp"
      - "rust-reference"
      - "rust-rayon"
    reruns:
      number: 1 # 3
      unaggregatable_metrics:
        - "Mesh x size"
        - "Total FLOPs"
    matrix:
      args:
        - "100 100 100"
    analysis:
      roofline_plots:
        - title: "OpenMP Roofline Plot"
          gflops_per_sec: "Total flops"
          flops_per_byte: "Memory Bandwidth" # TODO: Fix this!
          ert_json: "./yaml_examples/roofline.json"
      metrics:
        "Mesh x size": "nx: (\\d+)"
        "Total time (s)": "Time Summary:[\\s\\S]*Total\\s*: ([\\d\\.e\+]+)[\\s\\S]*\nFLOPS Summary"
        "Total FLOPs": "FLOPS Summary:[\\s\\S]*Total\\s*: ([\\d\\.e\+]+)[\\s\\S]*\nMFLOPS Summary"
        "Total MFLOPs/s": "MFLOPS Summary:[\\s\\S]*Total\\s*: ([\\d\\.e\+]+)"
        "Memory Bandwidth": "\\|\\s+Memory bandwidth\ \\[MBytes/s\\]\\s+\\|\\s+([\\d\\.]+)\ \\|"
        "Wall time (s)": "real\\s([\\d\\.]+)\nuser"
